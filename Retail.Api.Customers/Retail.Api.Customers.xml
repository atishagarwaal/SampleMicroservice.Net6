<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Retail.Api.Customers</name>
    </assembly>
    <members>
        <member name="T:Retail.Api.Customers.Common.MessageConstants">
            <summary>
            Constants class.
            </summary>
        </member>
        <member name="F:Retail.Api.Customers.Common.MessageConstants.InvalidParameter">
            <summary>
            Get or sets InvalidParameter.
            </summary>
        </member>
        <member name="F:Retail.Api.Customers.Common.MessageConstants.InternalServerError">
            <summary>
            Get or sets InternalServerError.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Controllers.CustomerController">
            <summary>
            Customer controller class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.#ctor(Retail.Api.Customers.Interface.ICustomerService)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Controllers.CustomerController"/> class.
            </summary>
            <param name="customerService">Intance of customer service class.</param>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.Get">
            <summary>
            Method to return list of all customers.
            </summary>
            <returns>List of customers.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.Get(System.Int64)">
            <summary>
            Method to fetch customer record based on Id.
            </summary>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.Post(Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to add a new customer record.
            </summary>
            <param name="value">Customer record.</param>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.Put(System.Int64,Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to update a customer record.
            </summary>
            <param name="id">Customer Id.</param>
            <param name="value">Customer record.</param>
        </member>
        <member name="M:Retail.Api.Customers.Controllers.CustomerController.Delete(System.Int64)">
            <summary>
            Method to delete a customer record.
            </summary>
            <param name="id">Customer Id.</param>
        </member>
        <member name="T:Retail.Api.Customers.Data.ApplicationDbContext">
            <summary>
            Application db context class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Data.ApplicationDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{Retail.Api.Customers.Data.ApplicationDbContext})">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Data.ApplicationDbContext"/> class.
            </summary>
            <param name="options">db context options.</param>
        </member>
        <member name="P:Retail.Api.Customers.Data.ApplicationDbContext.Customers">
            <summary>
            Gets or sets customers.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Data.ApplicationDbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
            Overrides the OnModelCreating method to configure the database context and model.
            </summary>
            <param name="modelBuilder">The model builder.</param>
        </member>
        <member name="T:Retail.Api.Customers.Data.DapperContext">
            <summary>
            Dapper context class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Data.DapperContext.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Data.DapperContext"/> class.
            </summary>
            <param name="configuration">Configuration object.</param>
        </member>
        <member name="P:Retail.Api.Customers.Data.DapperContext.Configuration">
            <summary>
            Gets Configuration.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Data.DapperContext.CreateConnection">
            <summary>
            Sets SQL Connection.
            </summary>
            <returns>Returns Sql connection.</returns>
        </member>
        <member name="T:Retail.Api.Customers.Dto.CustomerDto">
            <summary>
            Defines Customer entity.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Dto.CustomerDto.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Dto.CustomerDto.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Dto.CustomerDto.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Interface.ICustomerDapperRepository">
            <summary>
            Interface definition for customer repository.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerDapperRepository.AddAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Add a new object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerDapperRepository.GetAllAsync">
            <summary>
            Gets collection of object asynchronously.
            </summary>
            <returns>Returns collection of object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerDapperRepository.GetByIdAsync(System.Int64)">
            <summary>
            Get an object by Id asynchronously
            </summary>
            <param name="id">Primary key of the object.</param>
            <returns>Returns an object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerDapperRepository.RemoveAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Removes an object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerDapperRepository.UpdateAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Updates an object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="T:Retail.Api.Customers.Interface.ICustomerEntityRepository">
            <summary>
            Interface definition for customer repository.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Interface.ICustomerService">
            <summary>
            Interface definition for customer service.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerService.GetAllCustomersAsync">
            <summary>
            Method to fetch all customers asynchronously.
            </summary>
            <returns>List of customers.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerService.GetCustomerByIdAsync(System.Int64)">
            <summary>
            Method to fetch customer record based on Id asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerService.AddCustomerAsync(Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to add a new customer record asynchronously.
            </summary>
            <param name="custDto">Customer record.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerService.UpdateCustomerAsync(System.Int64,Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to update customer record asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <param name="custDto">Customer record.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.ICustomerService.DeleteCustomerAsync(System.Int64)">
            <summary>
            Method to delete customer record asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="T:Retail.Api.Customers.Interface.IDapperRepository">
            <summary>
            Interface definition for data access layer
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.ExecuteScalarAsync(System.String)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.ExecuteAsync(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.ExecuteScalar(System.String)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.Execute(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.QueryMultipleAsync``1(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw query multiple. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperRepository.QuerySingleOrDefaultAsync``1(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw query single or default. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="T:Retail.Api.Customers.Interface.IDapperUnitOfWork">
            <summary>
            Interface definition for unit of work.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Interface.IDapperUnitOfWork.CustomerDapperRepository">
            <summary>
            Gets or sets customer repository.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperUnitOfWork.BeginTransaction">
            <summary>
            Method to begin transaction.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperUnitOfWork.Commit">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IDapperUnitOfWork.Rollback">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Interface.IEntityRepository`1">
            <summary>
            Interface definition for data access layer
            </summary>
            <typeparam name="T">Generic type parameter.</typeparam>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.Add(`0)">
            <summary>
            Add a new object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.AddAsync(`0)">
            <summary>
            Add a new object asynchronously.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a range of objects.
            </summary>
            <param name="entities">Collection of object of type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a range of objects asynchronously.
            </summary>
            <param name="entities">Collection of object of type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query collection of object.
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query collection of object asynchronously.
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.GetAll">
            <summary>
            Gets collection of object
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.GetAllAsync">
            <summary>
            Gets collection of object asynchronously.
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.GetById(System.Int64)">
            <summary>
            Gets object by Id
            </summary>
            <param name="id">Generic type parameter.</param>
            <returns>Returns object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.GetByIdAsync(System.Int64)">
            <summary>
            Gets object by Id
            </summary>
            <param name="id">Generic type parameter.</param>
            <returns>Returns object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.Remove(`0)">
            <summary>
            Remove an object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Remove a range of objects.
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.Update(`0)">
            <summary>
            Update an object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityRepository`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update a range of objects.
            </summary>
            <param name="entities"></param>
        </member>
        <member name="T:Retail.Api.Customers.Interface.IEntityUnitOfWork">
            <summary>
            Interface definition for unit of work.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Interface.IEntityUnitOfWork.CustomerEntityRepository">
            <summary>
            Gets or sets customer repository.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.BeginTransaction">
            <summary>
            Method to begin transaction.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.BeginTransactionAsync">
            <summary>
            Method to begin transaction asynchronously.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.Commit">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.CommitAsync">
            <summary>
            Method to commit changes asynchronously.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.Rollback">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Interface.IEntityUnitOfWork.RollbackAsync">
            <summary>
            Method to commit changes asynchronously.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Migrations._001">
            <inheritdoc />
        </member>
        <member name="M:Retail.Api.Customers.Migrations._001.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Retail.Api.Customers.Migrations._001.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:Retail.Api.Customers.Migrations._001.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:Retail.Api.Customers.Model.Customer">
            <summary>
            Defines Customer entity.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Model.Customer.Id">
            <summary>
            Gets or sets the Id.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Model.Customer.FirstName">
            <summary>
            Gets or sets the first name.
            </summary>
        </member>
        <member name="P:Retail.Api.Customers.Model.Customer.LastName">
            <summary>
            Gets or sets the last name.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Profiles.CustomerProfile">
            <summary>
            Defines Customer profile for AutoMapper.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Profiles.CustomerProfile.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Profiles.CustomerProfile"/> class.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.Repositories.CustomerDapperRepository">
            <summary>
            Customer repository class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.#ctor(Retail.Api.Customers.Data.DapperContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Repositories.CustomerDapperRepository"/> class.
            </summary>
            <param name="dapperContext">Db context.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.AddAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Add a new object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.GetAllAsync">
            <summary>
            Gets collection of object asynchronously.
            </summary>
            <returns>Returns collection of object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.GetByIdAsync(System.Int64)">
            <summary>
            Get an object by Id asynchronously
            </summary>
            <param name="id">Primary key of the object.</param>
            <returns>Returns an object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.RemoveAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Removes an object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerDapperRepository.UpdateAsync(Retail.Api.Customers.Model.Customer)">
            <summary>
            Updates an object asynchronously.
            </summary>
            <param name="entity">Object parameter.</param>
            <returns>Returns an integer.</returns>
        </member>
        <member name="T:Retail.Api.Customers.Repositories.CustomerEntityRepository">
            <summary>
            Customer repository class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.CustomerEntityRepository.#ctor(Retail.Api.Customers.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Repositories.CustomerEntityRepository"/> class.
            </summary>
            <param name="context">Db context.</param>
        </member>
        <member name="T:Retail.Api.Customers.Repositories.DapperRepository">
            <summary>
            Generic repository class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.#ctor(Retail.Api.Customers.Data.DapperContext)">
            <summary>
            Initializes a new instance of the GenericRepository class.
            </summary>
            <param name="dapperContext">Db context.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.ExecuteScalarAsync(System.String)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.ExecuteAsync(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.ExecuteScalar(System.String)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.Execute(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw sql query. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.QueryMultipleAsync``1(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw query multiple. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="M:Retail.Api.Customers.Repositories.DapperRepository.QuerySingleOrDefaultAsync``1(System.String,Dapper.DynamicParameters)">
            <summary> 
            Runs raw query single or default. 
            </summary> 
            <param name="sqlquery">Raw sql query.</param> 
            <param name="parameters">Sql parameters.</param> 
            <returns>Returns data or status.</returns> 
        </member>
        <member name="T:Retail.Api.Customers.Repositories.EntityRepository`1">
            <summary>
            Generic repository class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.#ctor(Retail.Api.Customers.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the GenericRepository class.
            </summary>
            <param name="dbcontext">Db context.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.Add(`0)">
            <summary>
            Add a new object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.AddAsync(`0)">
            <summary>
            Add a new object asynchronously.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a range of objects.
            </summary>
            <param name="entities">Collection of object of type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Add a range of objects asynchronously.
            </summary>
            <param name="entities">Collection of object of type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.Find(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query collection of object.
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.FindAsync(System.Linq.Expressions.Expression{System.Func{`0,System.Boolean}})">
            <summary>
            Query collection of object asynchronously.
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.GetAll">
            <summary>
            Gets collection of object
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.GetAllAsync">
            <summary>
            Gets collection of object
            </summary>
            <returns>Returns collection of object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.GetById(System.Int64)">
            <summary>
            Gets object by Id
            </summary>
            <param name="id">Generic type parameter.</param>
            <returns>Returns object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.GetByIdAsync(System.Int64)">
            <summary>
            Gets object by Id
            </summary>
            <param name="id">Generic type parameter.</param>
            <returns>Returns object of type parameter T.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.Remove(`0)">
            <summary>
            Remove an object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Remove a range of objects.
            </summary>
            <param name="entities"></param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.Update(`0)">
            <summary>
            Update an object.
            </summary>
            <param name="entity">An object type parameter T.</param>
        </member>
        <member name="M:Retail.Api.Customers.Repositories.EntityRepository`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Update a range of objects.
            </summary>
            <param name="entities"></param>
        </member>
        <member name="T:Retail.Api.Customers.Service.CustomerService">
            <summary>
            Customer service class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.#ctor(Retail.Api.Customers.Interface.IEntityUnitOfWork,AutoMapper.IMapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.Service.CustomerService"/> class.
            </summary>
            <param name="unitOfWork">Intance of unit of work class.</param>
            <param name="mapper">Intance of mapper class.</param>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.GetAllCustomersAsync">
            <summary>
            Method to fetch all customers asynchronously.
            </summary>
            <returns>List of customers.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.GetCustomerByIdAsync(System.Int64)">
            <summary>
            Method to fetch customer record based on Id asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.AddCustomerAsync(Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to add a new customer record asynchronously.
            </summary>
            <param name="custDto">Customer record.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.UpdateCustomerAsync(System.Int64,Retail.Api.Customers.Dto.CustomerDto)">
            <summary>
            Method to update customer record asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <param name="custDto">Customer record.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="M:Retail.Api.Customers.Service.CustomerService.DeleteCustomerAsync(System.Int64)">
            <summary>
            Method to delete customer record asynchronously.
            </summary>
            <param name="id">Customer Id.</param>
            <returns>Customer object.</returns>
        </member>
        <member name="T:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork">
            <summary>
            Unit of work class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork.#ctor(Retail.Api.Customers.Data.DapperContext)">
            <summary>
            Initializes a new instance of the <see cref="N:Retail.Api.Customers.UnitOfWork"/> class.
            </summary>
            <param name="dapperContext">Dapper Db context.</param>
        </member>
        <member name="P:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork.CustomerDapperRepository">
            <summary>
            Gets or sets customer repository.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork.BeginTransaction">
            <summary>
            Method to begin transaction.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork.Commit">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.DapperUnitOfWork.Rollback">
            <summary>
            Method to rollback changes.
            </summary>
        </member>
        <member name="T:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork">
            <summary>
            Unit of work class.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.#ctor(Retail.Api.Customers.Data.ApplicationDbContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork"/> class.
            </summary>
            <param name="entityContext">Entity framework Db context.</param>
        </member>
        <member name="P:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.CustomerEntityRepository">
            <summary>
            Gets or sets customer repository.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.BeginTransaction">
            <summary>
            Method to begin transaction.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.BeginTransactionAsync">
            <summary>
            Method to begin asynchronously.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.Commit">
            <summary>
            Method to commit changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.CommitAsync">
            <summary>
            Method to commit changes asynchronously.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.Rollback">
            <summary>
            Method to rollback changes.
            </summary>
        </member>
        <member name="M:Retail.Api.Customers.UnitOfWork.EntityUnitOfWork.RollbackAsync">
            <summary>
            Method to rollback changes asynchronously.
            </summary>
        </member>
    </members>
</doc>
